{"ast":null,"code":"import _classCallCheck from \"/Users/mcrawford/Code/Minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mcrawford/Code/Minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mcrawford/Code/Minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mcrawford/Code/Minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mcrawford/Code/Minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mcrawford/Code/Minesweeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mcrawford/Code/Minesweeper/src/components/Cell.js\";\nimport React from 'react';\nimport { GiGolfFlag } from 'react-icons/gi';\nimport { GiClusterBomb } from 'react-icons/gi';\nimport '../styles/cell.css';\nvar baseStyle = {\n  width: 32,\n  height: 32,\n  border: 'outset 4px white',\n  lineHeight: '32px',\n  userSelect: 'none'\n};\nvar openStyle = {\n  width: 38,\n  height: 38,\n  lineHeight: '38px',\n  border: 'solid 1px darkgray'\n};\n\nvar Cell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cell, _React$Component);\n\n  function Cell(props) {\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cell).call(this, props));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleDoubleClick = _this.handleDoubleClick.bind(_assertThisInitialized(_this));\n    _this.handleRightClick = _this.handleRightClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      event.preventDefault();\n      this.props.onClick(this.props.x, this.props.y);\n    }\n  }, {\n    key: \"handleDoubleClick\",\n    value: function handleDoubleClick(e) {\n      e.preventDefault();\n      this.props.onDoubleClick(this.props.x, this.props.y);\n    }\n  }, {\n    key: \"handleRightClick\",\n    value: function handleRightClick(e) {\n      e.preventDefault();\n      this.props.onRightClick(this.props.x, this.props.y);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content = this.props.cell.flagged ? React.createElement(GiGolfFlag, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }) : '';\n      var style = Object.assign({}, baseStyle, {\n        width: this.props.cellSize - 8,\n        height: this.props.cellSize - 8,\n        lineHeight: \"\".concat(this.props.cellSize - 8, \"px\")\n      });\n\n      if (this.props.cell.open) {\n        style = Object.assign({}, style, openStyle, {\n          width: this.props.cellSize - 2,\n          height: this.props.cellSize - 2,\n          lineHeight: \"\".concat(this.props.cellSize - 2, \"px\")\n        });\n\n        if (this.props.cell.bomb) {\n          content = React.createElement(GiClusterBomb, {\n            style: {\n              marginTop: -3\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n          style = Object.assign({}, style, {\n            backgroundColor: 'red'\n          });\n        } else {\n          if (this.props.cell.bombCount > 0) {\n            content = this.props.cell.bombCount;\n\n            switch (content) {\n              case 1:\n                style = Object.assign({}, style, {\n                  color: 'blue'\n                });\n                break;\n\n              case 2:\n                style = Object.assign({}, style, {\n                  color: 'green'\n                });\n                break;\n\n              case 3:\n                style = Object.assign({}, style, {\n                  color: 'red'\n                });\n                break;\n\n              case 4:\n                style = Object.assign({}, style, {\n                  color: 'navy'\n                });\n                break;\n\n              case 5:\n                style = Object.assign({}, style, {\n                  color: 'darkred'\n                });\n                break;\n\n              case 6:\n                style = Object.assign({}, style, {\n                  color: 'deepskyblue'\n                });\n                break;\n\n              case 7:\n                style = Object.assign({}, style, {\n                  color: 'navy'\n                });\n                break;\n\n              case 8:\n                style = Object.assign({}, style, {\n                  color: 'gray'\n                });\n                break;\n\n              default:\n                break;\n            }\n          } else {\n            content = '';\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"cell\",\n        style: style,\n        onClick: this.handleClick,\n        onDoubleClick: this.handleDoubleClick,\n        onContextMenu: this.handleRightClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return Cell;\n}(React.Component);\n\nexport { Cell as default };","map":{"version":3,"sources":["/Users/mcrawford/Code/Minesweeper/src/components/Cell.js"],"names":["React","GiGolfFlag","GiClusterBomb","baseStyle","width","height","border","lineHeight","userSelect","openStyle","Cell","props","handleClick","bind","handleDoubleClick","handleRightClick","event","preventDefault","onClick","x","y","e","onDoubleClick","onRightClick","content","cell","flagged","style","Object","assign","cellSize","open","bomb","marginTop","backgroundColor","bombCount","color","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { GiGolfFlag } from 'react-icons/gi'\nimport { GiClusterBomb } from 'react-icons/gi'\nimport '../styles/cell.css'\n\nconst baseStyle = {\n  width: 32,\n  height: 32,\n  border: 'outset 4px white',\n  lineHeight: '32px',\n  userSelect: 'none'\n}\n\nconst openStyle = {\n  width: 38,\n  height: 38,\n  lineHeight: '38px',\n  border: 'solid 1px darkgray'\n}\n\nexport default class Cell extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleDoubleClick = this.handleDoubleClick.bind(this)\n    this.handleRightClick = this.handleRightClick.bind(this)\n  }\n\n  handleClick(event) {\n    event.preventDefault()\n    this.props.onClick(this.props.x, this.props.y)\n  }\n\n  handleDoubleClick(e) {\n    e.preventDefault()\n    this.props.onDoubleClick(this.props.x, this.props.y)\n  }\n\n  handleRightClick(e) {\n    e.preventDefault()\n    this.props.onRightClick(this.props.x, this.props.y)\n  }\n\n  render() {\n    let content = this.props.cell.flagged ? <GiGolfFlag /> : ''\n    let style = Object.assign({}, baseStyle, {\n      width: this.props.cellSize - 8,\n      height: this.props.cellSize - 8,\n      lineHeight: `${this.props.cellSize - 8}px`,\n    })\n    if (this.props.cell.open) {\n      style = Object.assign({}, style, openStyle, {\n        width: this.props.cellSize - 2,\n        height: this.props.cellSize - 2,\n        lineHeight: `${this.props.cellSize - 2}px`\n      })\n      if (this.props.cell.bomb) {\n        content = <GiClusterBomb style={{ marginTop: -3 }} />\n        style = Object.assign({}, style, { backgroundColor: 'red' })\n      } else {\n        if (this.props.cell.bombCount > 0) {\n          content = this.props.cell.bombCount\n          switch (content) {\n            case 1:\n              style = Object.assign({}, style, { color: 'blue' })\n              break\n            case 2:\n              style = Object.assign({}, style, { color: 'green' })\n              break\n            case 3:\n              style = Object.assign({}, style, { color: 'red' })\n              break\n            case 4:\n              style = Object.assign({}, style, { color: 'navy' })\n              break\n            case 5:\n              style = Object.assign({}, style, { color: 'darkred' })\n              break\n            case 6:\n              style = Object.assign({}, style, { color: 'deepskyblue' })\n              break\n            case 7:\n              style = Object.assign({}, style, { color: 'navy' })\n              break\n            case 8:\n              style = Object.assign({}, style, { color: 'gray' })\n              break\n            default:\n              break\n          }\n        } else {\n          content = ''\n        }\n      }\n    }\n    return (\n      <div\n        className=\"cell\"\n        style={style}\n        onClick={this.handleClick}\n        onDoubleClick={this.handleDoubleClick}\n        onContextMenu={this.handleRightClick}\n      >\n        {content}\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}